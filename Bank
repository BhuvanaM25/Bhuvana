package com.bhu.model;

public class Bank

{

    private String bankName;

    private String branchName;

    private Account[] accounts;

    private int accountCount;

    public Bank() {}

    public Bank(String bankName, String branchName, Account[] accounts, int accountCount)

    {

        super();

        this.bankName = bankName;

        this.branchName = branchName;

        this.accounts = accounts;

        this.accountCount = accountCount;

    }

    public String getBankName()

    {

        return bankName;

    }

    public void setBankName(String bankName)

    {

        this.bankName = bankName;

    }

    public String getBranchName()

    {

        return branchName;

    }

    public void setBranchName(String branchName)

    {

        this.branchName = branchName;

    }

    public Account[] getAccounts()

    {

        return accounts;

    }

    public void setAccounts(Account[] accounts)

    {

        this.accounts = accounts;

    }

    public int getAccountCount()

    {

        return accountCount;

    }

    public void setAccountCount(int accountCount)

    {

        this.accountCount = accountCount;

    }

    public boolean addAccount(Account account) {

        if (accountCount >= 10) {

            throw new RuntimeException("Maximum account limit reached.");

        }

        accounts[accountCount] = account;

        accountCount++;

        return true;

    }

 

    public void showAccounts()

    {

        System.out.println("Accounts in " + bankName + " - " + branchName + ":");

        for (int i = 0; i < accountCount; i++)

        {

            Account account = accounts[i];

            System.out.println("Account No: " + account.getAccountNo());

            System.out.println("Opened Date: " + account.getOpenedDate());

            System.out.println("Balance: " + account.getBalance());

            System.out.println("---------------------------");

        }

       

    }

    public boolean transaction(char ttype, String accountNo, double amount)

    {

        Account account = findAccount(accountNo);

        if (account == null)

        {

            System.out.println("Account not found!");

            return false;

        }

 

   private private Account findAccount(String accountNo)

   {

    for (int i = 0; i < accountCount; i++)

    {

        if (accounts[i].getAccountNo().equals(accountNo))

        {

            return accounts[i];

        }

    }

    return null;

}

 
